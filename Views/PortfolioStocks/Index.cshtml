@model IEnumerable<StockPortfolio.Models.PortfolioStock>

@{
    ViewData["Title"] = "Index";
    var quoteList = ViewBag.quoteList;
}

<h1>Portfolio</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Symbol)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CompanyName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Currency)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AveragePrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Volume)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.StockCost)
                </th>*@
            <th>
                Market Price
            </th>
            <th>
                Total Return
            </th>
            <th>
                % Return
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Symbol)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Currency)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AveragePrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Volume)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.StockCost)
                    </td>*@
                @foreach (var quote in quoteList)
                {
                    if (quote.Symbol == item.Symbol)
                    {
                        var quotePrice = quote.Price;
                        var stockValue = item.AveragePrice * item.Volume;
                        var totalReturn = Math.Round((quotePrice * item.Volume) - stockValue, 2);
                        var percentageReturn = stockValue == 0 ? 0 : Math.Round(totalReturn / stockValue * 100, 2);

                        <td>@quotePrice</td>
                        <td>@totalReturn</td>
                        <td>@percentageReturn</td>
                    }
                }
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


<style>

    .container {
        max-width: 1300px;
    }
</style>